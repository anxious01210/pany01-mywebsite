# Generated by Django 3.2 on 2022-12-21 14:59

import django.core.validators
from django.db import migrations, models
import library.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnnualCatalogue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(help_text='Enter the file-name here.', max_length=100)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', help_text="'Published' will cause the pdf to to be loaded/shown to the website visitors.", max_length=10)),
                ('catalogue_pdf', models.FileField(upload_to='library_app/YearCatalogueDirectory/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('order_number', models.PositiveIntegerField(default=1, help_text="The PDF with the status 'Published' & lowestorder number will be displayed as Annual Catalogue to the visitors.", validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)])),
            ],
            options={
                'ordering': ['-order_number'],
            },
        ),
        migrations.CreateModel(
            name='Pdffile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FileField(help_text='After uploading a pdf from here and saving it, do not change the pdf. If you you need to then delete this object completely and create a new one with the new pdf file.', upload_to=library.models.set_pdf_file_name, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('filename', models.CharField(help_text='This is the name that will show to the website visitors.', max_length=100)),
                ('pdf_type', models.CharField(choices=[('mnul', 'Manual'), ('ctlg', 'Catalogue'), ('apln-dtls', 'Application Details')], max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', help_text="'Draft' will cause the pdf to not to be loaded/shown to the website visitors.", max_length=10)),
                ('pagenumforcover', models.PositiveIntegerField(default=1, help_text='Choose the page number that you want the system to create a cover image from it to be shown to the website visitors.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)])),
                ('coverpage', models.FileField(blank=True, upload_to=library.models.set_cover_file_name)),
            ],
        ),
    ]
