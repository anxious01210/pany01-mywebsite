"""
Django settings for mywebsite project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "j*kxps1yp+5s$f$(3%jfhy$m)+56wd)+rqhoil#gv&tqp*optc"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "panyproject.pythonanywhere.com",
    "www.panycompany.com",
    "0.0.0.0",
    "127.0.0.1",
    "192.168.128.136",
]

# debug-toolbar
INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    "0.0.0.0",
    "192.168.128.136",
    # ...
]


# django-admin-interface
# X_FRAME_OPTIONS='SAMEORIGIN' # only if django version >= 3.0

# Application definition
INSTALLED_APPS = [
    "website.apps.WebsiteConfig",
    # Blog-app
    "blog.apps.BlogConfig",
    "django_filters",
    "admin_interface",
    "colorfield",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "django.contrib.sitemaps",
    "import_export",
    "phonenumber_field",
    "django_tables2",
    "tinymce",
    "library.apps.LibraryConfig",
    "pdf2image",
    "easy_thumbnails",
    # 'view_breadcrumbs', # for class-based views - pip uninstall django-view-breadcrumbs
    # 'django_bootstrap_breadcrumbs', # for function-based views - pip uninstall django-bootstrap-breadcrumbs
    # debug-toolbar
    # "debug_toolbar",
    # django-taggit
    "taggit",
]

# Django_tables2
DJANGO_TABLES2_TEMPLATE = "django_tables2/bootstrap4.html"

# Django_import_export
IMPORT_EXPORT_USE_TRANSACTIONS = True

# Define SITE_ID:
SITE_ID = 1

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # debug-toolbar
    "debug_toolbar.middleware.DebugToolbarMiddleware",
]

ROOT_URLCONF = "mywebsite.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            BASE_DIR / "templates",
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "website.context_processors.menu_categories",
                "website.context_processors.menu_brands",
                "website.context_processors.menu_projects_cities",
                "library.context_processors.menu_pdffiles_types",
                "library.context_processors.menu_annual_catalogue",
                "website.context_processors.theme",
            ],
        },
    },
]

WSGI_APPLICATION = "mywebsite.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        # 'NAME': 'PanyCompany$default',PanyCompany$DB01
        "NAME": "PanyProject$DB01",
        "USER": "PanyProject",
        "PASSWORD": "Diagonal1!DB",
        # 'HOST': 'PanyProject.mysql.pythonanywhere-services.com',
        "HOST": "localhost",
        "OPTIONS": {
            # 'init_command': 'SET innodb_strict_mode=1',
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
            "charset": "utf8mb4",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"
# STATIC_DIR = '/static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
    # '/var/www/static/',
]

# This is where Django looks for static files to serve the HTMLs after you did "python3.8 manage.py collectstatic"
# which after collecting the files it automatically puts all of the files into staticfiles directory.
STATIC_ROOT = BASE_DIR / "staticfiles"
# STATIC_ROOT = BASE_DIR / 'static'

MEDIA_ROOT = BASE_DIR / "media"
MEDIA_URL = "/media/"

# Email Settings
EMAIL_HOST = "smtp.gmail.com"
EMAIL_HOST_USER = "info@panycompany.com"
EMAIL_HOST_PASSWORD = "ihwjxixolihprzia"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
# EMAIL_USE_SSL = False

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Added after upgrade to Django 3.2 - is a must
DEFAULT_AUTO_FIELD = "django.db.models.AutoField"

# django-tinymce configs instead of static/js/upload.js
TINYMCE_DEFAULT_CONFIG = {
    # "theme": "advanced",
    "height": 500,
    "entity_encoding": "raw",
    "menubar": "file edit view insert format tools table help",
    "plugins": "print preview paste importcss searchreplace autolink autosave save code visualblocks visualchars"
    "fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime"
    "advlist lists spellchecker wordcount imagetools textpattern noneditable help charmap emoticons quickbars",
    "toolbar": "fullscreen preview | undo redo | bold italic forecolor backcolor | formatselect | image link | "
    "alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | fontsizeselect "
    "emoticons | ",
    "custom_undo_redo_levels": 50,
    "quickbars_insert_toolbar": False,
    "file_picker_callback": """function (cb, value, meta) {
        var input = document.createElement("input");
        input.setAttribute("type", "file");
        if (meta.filetype == "image") {
            input.setAttribute("accept", "image/*");
        }
        if (meta.filetype == "media") {
            input.setAttribute("accept", "video/*");
        }

        input.onchange = function () {
            var file = this.files[0];
            var reader = new FileReader();
            reader.onload = function () {
                var id = "blobid" + (new Date()).getTime();
                var blobCache = tinymce.activeEditor.editorUpload.blobCache;
                var base64 = reader.result.split(",")[1];
                var blobInfo = blobCache.create(id, file, base64);
                blobCache.add(blobInfo);
                cb(blobInfo.blobUri(), { title: file.name });
            };
            reader.readAsDataURL(file);
        };
        input.click();
    }""",
    # "content_style": "body { font-family:Roboto,Helvetica,Arial,sans-serif; font-size:14px }, table{border:1px;}, ",
    "content_style": "body { font-family:Roboto,Helvetica,Arial,sans-serif; font-size:14px }",
    # "content_css": "website/stylesheet/contentTinymce.csscontent-tinymce.css",  # Points to a CSS file named "content.css" in the "css" directory
    "content_css": "website/stylesheet/contentTinymce.css",  # Points to a CSS file named "content.css" in the "css" directory
}

TINYMCE_SPELLCHECKER = True
# TINYMCE_COMPRESSOR = True
